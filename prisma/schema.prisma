// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Usuario {
  id    Int     @id @default(autoincrement())
  nome        String
  nascimento  DateTime
  email       String   @unique
  cpf         String   @unique
  senha       String
  criado_em   DateTime @default(now())
  locacao     Locacao[]
  
  @@map("usuarios") // <-- Define o nome da tabela
}

model Quadra {
  id               Int      @id @default(autoincrement())
  nomeLocal        String    @map("nome_local")
  tipoQuadra       String    @map("tipo_quadra")
  localizacao      String
  imagemPrincipal  String    @map("imagem_principal")
  imagemPri        String    @map("imagem_pri")
  imagemSeg        String    @map("imagem_seg")
  imagemTer        String    @map("imagem_ter")
  telefone         String
  preco            Float    // Use Float para valores com casas decimais
  dimensoes        String
  iluminacao       Boolean
  vestiarios       Boolean
  bebedouro        Boolean
  estacionamento   Boolean
  arquibancada     Boolean
  coberta          Boolean
  acessibilidade   Boolean
  wifi             Boolean   @map("wi_fi")
  criado_em        DateTime @default(now()) 
  locacao          Locacao[]

  @@map("quadras") // Nome da tabela no banco
}

  model Locacao {
  id          Int       @id @default(autoincrement())
  idUsuario  Int      @map("id_usuario")
  idQuadra   Int      @map("id_quadra")
  usuario     Usuario @relation(fields: [idUsuario], references: [id])
  quadra      Quadra   @relation(fields: [idQuadra], references: [id])
  dataHora    DateTime @map("data_hora")

  @@map("locacoes") // Nome da tabela no banco
}